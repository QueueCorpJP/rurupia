name: Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: ap-northeast-1
      S3_BUCKET: therapist-connectivity-frontend-93b9faa0
      CLOUDFRONT_DISTRIBUTION_ID: E2P3Q41GY0N3CJ
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create .env.production file
        run: |
          echo "# Supabase Configuration" > .env.production
          echo "VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}" >> .env.production
          echo "VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}" >> .env.production
          echo "" >> .env.production
          echo "# TinyMCE Configuration" >> .env.production
          echo "VITE_TINYMCE_API_KEY=${{ secrets.VITE_TINYMCE_API_KEY }}" >> .env.production
      
      - name: Build application
        run: npm run build
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Deploy to S3
        run: aws s3 sync ./dist s3://${{ env.S3_BUCKET }} --delete
      
      - name: Invalidate CloudFront distribution
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
      
      - name: Deploy Lambda Function
        run: |
          cd lambda-api
          npm ci
          zip -r function.zip index.js package.json package-lock.json node_modules/
          aws lambda update-function-code --function-name rurupia-api --zip-file fileb://function.zip --region ${{ env.AWS_REGION }}
      
      - name: Update Lambda Environment Variables
        run: |
          aws lambda update-function-configuration --function-name rurupia-api --environment 'Variables={
            "SUPABASE_URL":"${{ secrets.VITE_SUPABASE_URL }}",
            "SUPABASE_SERVICE_ROLE_KEY":"${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}",
            "SUPABASE_ANON_KEY":"${{ secrets.VITE_SUPABASE_ANON_KEY }}"
          }' --region ${{ env.AWS_REGION }} 